
import socket

s = socket.socket()
s.connect(("10.12.0.54",1515))
print(s.recv(1024).decode())
'gm8e'
# gif_str = "R0lGODlhagAeAIcAAAAAAAAARAAAiAAAzABEAABERABEiABEzACIAACIRACIiACIzADMAADMRADMiADMzADd3REREQAAVQAAmQAA3QBVAABVVQBMmQBJ3QCZAACZTACZmQCT3QDdAADdSQDdkwDungDu7iIiIgAAZgAAqgAA7gBmAABmZgBVqgBP7gCqAACqVQCqqgCe7gDuAADuTwD/VQD/qgD//zMzMwAAdwAAuwAA/wB3AAB3dwBduwBV/wC7AAC7XQC7uwCq/wD/AEQAREQAiEQAzEREAEREREREiEREzESIAESIRESIiESIzETMAETMRETMiETMzEQAAFUAAFUAVUwAmUkA3VVVAFVVVUxMmUlJ3UyZAEyZTEyZmUmT3UndAEndSUndk0nd3U/u7mYAAGYAZlUAqk8A7mZmAGZmZlVVqk9P7lWqAFWqVVWqqk+e7k/uAE/uT0/unlX/qlX//3cAAHcAd10Au1UA/3d3AHd3d11du1VV/127AF27XV27u1Wq/1X/AFX/VYgAiIgAzIhEAIhERIhEiIhEzIiIAIiIRIiIiIiIzIjMAIjMRIjMiIjMzIgAAIgARJkATJkAmZMA3ZlMAJlMTJlMmZNJ3ZmZAJmZTJmZmZOT3ZPdAJPdSZPdk5Pd3ZkAAKoAAKoAVaoAqp4A7qpVAKpVVapVqp5P7qqqAKqqVaqqqp6e7p7uAJ7uT57unp7u7qr//7sAALsAXbsAu6oA/7tdALtdXbtdu6pV/7u7ALu7Xbu7u6qq/6r/AKr/Var/qswAzMxEAMxERMxEiMxEzMyIAMyIRMyIiMyIzMzMAMzMRMzMiMzMzMwAAMwARMwAiN0Ak90A3d1JAN1JSd1Jk91J3d2TAN2TSd2Tk92T3d3dAN3dSd3dk93d3d0AAN0ASe4AT+4Anu4A7u5PAO5PT+5Pnu5P7u6eAO6eT+6enu6e7u7uAO7uT+7unu7u7u4AAP8AAP8AVf8Aqv8A//9VAP9VVf9Vqv9V//+qAP+qVf+qqv+q////AP//Vf//qv///ywAAAAAagAeAAAI//8EDiRY0OBBhAkVLmTY0OFDiBElJrQx0eJFjBhtbMx4kGNHkBpDetxY0qTCiiNVrkRZkmTKkTBZzmT4sWNFmQzduePlTqJJoDlpItzp02NEd2jyrOKls6dRikMVutOkKU9Id3ny8ELTbeDOgrxWrdKaB6pUiFzJjhTbbeu/rJqYCuymdCyvbmS7nTUYVKjKpFT5FhyckJcmsUx5LdUKd2k3sY8fo605sG5evovL5lHqdWFWyFpXQZb773A3q0ytLm5KOWpKt3k9DyTLulteNIUJUl2V9CrrnasQIxZ4OA9x11EFZuWFt2BpTWiU/juum7ZZvKxpjzYLF3Lz2VL/Gv+k2rz1wKX/0IzuGnjqUp+He6Lvmdvt5qtoXX6W65zgWHds8GmrAP85aTerjEJjPvoMNG2rprKyLqaG3BkLsoLSy+0fANHYzy8bxDpslQybymOvsvB6KznyINvLQrNI/K83Aamrrxuh3BqNl5LWIkgu1Ea7bau8zmNxIK44U4y7DHtbqrbFBrsvxK0gHO0/KxHTjLcjC7psMb0WKwhA40w0Esk8SmpqLPXCe5CnJ3vSriWbRsqqNxHnRI87CI+bDSbIVglRILK4DIvIscha0aE6QUpqPbGQ+0+TrBh7SqD9vkKyqvQI04wspiZkkSfh5jJIsvn4Go+2BBNyca8uMRInzq0zIeIpVtdExXVXXnv19deQQFyVpmGB7StTYhs1tiFhi31ovIAAADs="
# gif_str = "R0lGODlhagAeAIcAAAAAAAAARAAAiAAAzABEAABERABEiABEzACIAACIRACIiACIzADMAADMRADMiADMzADd3REREQAAVQAAmQAA3QBVAABVVQBMmQBJ3QCZAACZTACZmQCT3QDdAADdSQDdkwDungDu7iIiIgAAZgAAqgAA7gBmAABmZgBVqgBP7gCqAACqVQCqqgCe7gDuAADuTwD/VQD/qgD//zMzMwAAdwAAuwAA/wB3AAB3dwBduwBV/wC7AAC7XQC7uwCq/wD/AEQAREQAiEQAzEREAEREREREiEREzESIAESIRESIiESIzETMAETMRETMiETMzEQAAFUAAFUAVUwAmUkA3VVVAFVVVUxMmUlJ3UyZAEyZTEyZmUmT3UndAEndSUndk0nd3U/u7mYAAGYAZlUAqk8A7mZmAGZmZlVVqk9P7lWqAFWqVVWqqk+e7k/uAE/uT0/unlX/qlX//3cAAHcAd10Au1UA/3d3AHd3d11du1VV/127AF27XV27u1Wq/1X/AFX/VYgAiIgAzIhEAIhERIhEiIhEzIiIAIiIRIiIiIiIzIjMAIjMRIjMiIjMzIgAAIgARJkATJkAmZMA3ZlMAJlMTJlMmZNJ3ZmZAJmZTJmZmZOT3ZPdAJPdSZPdk5Pd3ZkAAKoAAKoAVaoAqp4A7qpVAKpVVapVqp5P7qqqAKqqVaqqqp6e7p7uAJ7uT57unp7u7qr//7sAALsAXbsAu6oA/7tdALtdXbtdu6pV/7u7ALu7Xbu7u6qq/6r/AKr/Var/qswAzMxEAMxERMxEiMxEzMyIAMyIRMyIiMyIzMzMAMzMRMzMiMzMzMwAAMwARMwAiN0Ak90A3d1JAN1JSd1Jk91J3d2TAN2TSd2Tk92T3d3dAN3dSd3dk93d3d0AAN0ASe4AT+4Anu4A7u5PAO5PT+5Pnu5P7u6eAO6eT+6enu6e7u7uAO7uT+7unu7u7u4AAP8AAP8AVf8Aqv8A//9VAP9VVf9Vqv9V//+qAP+qVf+qqv+q////AP//Vf//qv///ywAAAAAagAeAAAI//8EDrRRcOBBhAkVEixocOFDiBElTlRog+JFhA01WsTY0eNHkBc1hiQ5kSPDjSlVNizZ0uVBliVXpnxZ06RNnDl17uTZ0+dPoEFduhNatKQ7XqtW5elG1OjThe6kDuymKY8mpXl4OU1ocWrNkySlEh2LsdtSG5p4/XOXZxUvuLyqrqqoyQaaPExdxgTZDc1dG3nu0o2IVG3ebv+WIs3jbmlexgm7CXbXrRsvvS3DenSHhjDms3keXs6Dd5Vpre6wYv6nF43jVVwFrmqIF65oqAeX/rOLRpNhhZjR4EWKdKnS27w0TX6r1a1s3rwCJ1X71udM7DMVaxV+1fHv3Wgww/9dejv2Qd+O8fpOuja3wNesO0dW+Ha6O4uLk06WCxmpXLzQW+WyVaxK7j2BLFKOLQVxSwirzhLjbsD2lHPMuby20mogz/zK67EBEWyNNLbi02Qht/hTDLytlPILNKz+2U+pgTBrC0OtNsuIJpw2tGGp+BxM6C3WeHltt/JMS6qxxQrkakPl3vrLIYp4NGkkql5TTS0ZhUQoRo7E20+5q/hra7XW3BOoM7eyyvEjHTvKjj6FntswL6ukkiuxxWA77TeEDGtTTTn/iVOkkarKcaP6DqNrrq0CBdFA6AYaq1KMDs0UJY1Ye+hDuspSCKmzBsRURDmpTIjUU1F19VVYY5UJdVZaa7X1qYAAADs="
# gif_str = "R0lGODlhagAeAIcAAAAAAAAARAAAiAAAzABEAABERABEiABEzACIAACIRACIiACIzADMAADMRADMiADMzADd3REREQAAVQAAmQAA3QBVAABVVQBMmQBJ3QCZAACZTACZmQCT3QDdAADdSQDdkwDungDu7iIiIgAAZgAAqgAA7gBmAABmZgBVqgBP7gCqAACqVQCqqgCe7gDuAADuTwD/VQD/qgD//zMzMwAAdwAAuwAA/wB3AAB3dwBduwBV/wC7AAC7XQC7uwCq/wD/AEQAREQAiEQAzEREAEREREREiEREzESIAESIRESIiESIzETMAETMRETMiETMzEQAAFUAAFUAVUwAmUkA3VVVAFVVVUxMmUlJ3UyZAEyZTEyZmUmT3UndAEndSUndk0nd3U/u7mYAAGYAZlUAqk8A7mZmAGZmZlVVqk9P7lWqAFWqVVWqqk+e7k/uAE/uT0/unlX/qlX//3cAAHcAd10Au1UA/3d3AHd3d11du1VV/127AF27XV27u1Wq/1X/AFX/VYgAiIgAzIhEAIhERIhEiIhEzIiIAIiIRIiIiIiIzIjMAIjMRIjMiIjMzIgAAIgARJkATJkAmZMA3ZlMAJlMTJlMmZNJ3ZmZAJmZTJmZmZOT3ZPdAJPdSZPdk5Pd3ZkAAKoAAKoAVaoAqp4A7qpVAKpVVapVqp5P7qqqAKqqVaqqqp6e7p7uAJ7uT57unp7u7qr//7sAALsAXbsAu6oA/7tdALtdXbtdu6pV/7u7ALu7Xbu7u6qq/6r/AKr/Var/qswAzMxEAMxERMxEiMxEzMyIAMyIRMyIiMyIzMzMAMzMRMzMiMzMzMwAAMwARMwAiN0Ak90A3d1JAN1JSd1Jk91J3d2TAN2TSd2Tk92T3d3dAN3dSd3dk93d3d0AAN0ASe4AT+4Anu4A7u5PAO5PT+5Pnu5P7u6eAO6eT+6enu6e7u7uAO7uT+7unu7u7u4AAP8AAP8AVf8Aqv8A//9VAP9VVf9Vqv9V//+qAP+qVf+qqv+q////AP//Vf//qv///ywAAAAAagAeAAAI//8EDiRY0OBBhAkVFrSx0OFDiBElTjRowyJFjBk1HrTYEWLDjSFFavQ40uRJlClVrmTI0uXLliBhzlwpM6NNgt3cTdxJMyFOjO548fpXkiCvPKsiCiXqk+PFjEI1rUJDFKi7VXl2doRqkBeapE4RAkXItNtArEm/NjWYlq1Cd3l4YX0r1iFTpGDVCsw6NE+esweF5tH0kNeqbll72k04VFMevUndTc76r5tcXprmLi4oFKxhzUjzME6oCSyaVZOxorFR9R+atHH/Jg3ceZXSh6saXtbEmfRAyZBtaEXqjmtH0UOz1ka7qrDDbqh3Iq37+9/tuHPldtPMnRfXuM7nItlti92haMSEfVunLff6qsO8Ejt2n7Vv0fLPof+Vur7mQ02OE3DA49wjCCv9HiJutJmMKk0+NP5xBzbsnHtNruz+Oewy5iTUjayBbNoOMJpALGgq4yS0YTAN5QJLs9uQSq8urJQSMET8+IJvKOsMCu6spBQ7jLDM4LttR8RsSzDEi2wqjrweCeorLPtSs6wbnYo8kqrqEJQoOyijHMg+ooTS6SDeHkuysyInIgzDhW5MSaZuNoOoTtW8AuvMiIay0zoHYTJRTI6cCpRQRAdFdNGRDmVUzK4eJS0gADs="
gif_str = "R0lGODlhagAeAIcAAAAAAAAARAAAiAAAzABEAABERABEiABEzACIAACIRACIiACIzADMAADMRADMiADMzADd3REREQAAVQAAmQAA3QBVAABVVQBMmQBJ3QCZAACZTACZmQCT3QDdAADdSQDdkwDungDu7iIiIgAAZgAAqgAA7gBmAABmZgBVqgBP7gCqAACqVQCqqgCe7gDuAADuTwD/VQD/qgD//zMzMwAAdwAAuwAA/wB3AAB3dwBduwBV/wC7AAC7XQC7uwCq/wD/AEQAREQAiEQAzEREAEREREREiEREzESIAESIRESIiESIzETMAETMRETMiETMzEQAAFUAAFUAVUwAmUkA3VVVAFVVVUxMmUlJ3UyZAEyZTEyZmUmT3UndAEndSUndk0nd3U/u7mYAAGYAZlUAqk8A7mZmAGZmZlVVqk9P7lWqAFWqVVWqqk+e7k/uAE/uT0/unlX/qlX//3cAAHcAd10Au1UA/3d3AHd3d11du1VV/127AF27XV27u1Wq/1X/AFX/VYgAiIgAzIhEAIhERIhEiIhEzIiIAIiIRIiIiIiIzIjMAIjMRIjMiIjMzIgAAIgARJkATJkAmZMA3ZlMAJlMTJlMmZNJ3ZmZAJmZTJmZmZOT3ZPdAJPdSZPdk5Pd3ZkAAKoAAKoAVaoAqp4A7qpVAKpVVapVqp5P7qqqAKqqVaqqqp6e7p7uAJ7uT57unp7u7qr//7sAALsAXbsAu6oA/7tdALtdXbtdu6pV/7u7ALu7Xbu7u6qq/6r/AKr/Var/qswAzMxEAMxERMxEiMxEzMyIAMyIRMyIiMyIzMzMAMzMRMzMiMzMzMwAAMwARMwAiN0Ak90A3d1JAN1JSd1Jk91J3d2TAN2TSd2Tk92T3d3dAN3dSd3dk93d3d0AAN0ASe4AT+4Anu4A7u5PAO5PT+5Pnu5P7u6eAO6eT+6enu6e7u7uAO7uT+7unu7u7u4AAP8AAP8AVf8Aqv8A//9VAP9VVf9Vqv9V//+qAP+qVf+qqv+q////AP//Vf//qv///ywAAAAAagAeAAAI//8EDiRY0OBBhAkVLmTY0OFDiBElTqRY0eLFiTYW2uDIEeNHkA01anTYsWNIlChJpmTZ0uJKlxHdgXRXU6BNiO5GxoTYjdfPbjMF+gzKUOg/XpryCMxjA81ShrxW5VkFk2fUPFnzCOWVFQ0vhe5+gv2HZtUqgat+QlXYLc/YqxHfunvLlJdbsjfFDtS69d/bu5rUSl3obpUmw2zjNnTb7bDYrY8JHs46s65gd4KlUsX77+jBt50XP2zq7uvcrwTpvlX77yzSPI41dX2c56namSZ17z4Zkfdvkwo7aqW76jNSTT4jG3c7lZdpqnR/TjVesNvTmlNHQ7TxvDvdbgal6/+UTrUrYOqunz6vS7Ar4tUlg/O8vjf6wa6ZuyY1W1Wtc9PWMkwTg6q6qz3f5ivJobpMO44gzTRBQxNNbHjrqeYEBK8r0HxKbrveECKJw/sQ6soxGwTLKqmlbBhsKcfWAu3A8EAUziMS8zpoPBfR+4mu2QiT6icCDZqtsQXjGnGp2RbKL7a56rpuK6X2ywwtI1fppkn5rHIpKbq8zDI74/LjBcOkNDvxQc1a2+6hMyv0SKH8BvQsq1Weasq8/RByDsE3jToMON3+Uus+scYai0JAC0rTzUAHEvOmhwid07O7HlTtx0gJCvEin66a1KVRO2WoVFNTLehTVVs9CFVXY5ULdVZaX7X01ktTCggAOw=="
while True:
    flag = input('GIF base64 string ： ')
    if flag == '0':
        content = 'exit'
    else:
        content = gif_str
    if content == 'exit':
        break
    # s.sendall(str(len(content)).encode('utf-8'))  # 发送大小
    # flag = s.recv(1024).decode()

    s.sendall(content.encode('utf-8'))  # 发送图片字符串
    res = s.recv(1024)
    print(res.decode())

s.close()


# size = os.stat("1qpp.png").st_size
# obj.sendall(bytes(str(size),encoding="utf-8"))
#
# obj.recv(1024)
#
# with open("1qpp.png","rb") as f:
#     obj.sendall(f.read())
